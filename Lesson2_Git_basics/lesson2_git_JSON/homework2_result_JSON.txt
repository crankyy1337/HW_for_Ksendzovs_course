JSON
 4. Создать внешний репозиторий c названием JSON.
	зайти в свой профиль на гитхабе -> перейти в repositories -> кликнуть new -> создать публичный репозиторий "lesson2_git_JSON" (по желанию можно добавить README файл) //мне такое название удобнее

 5. Клонировать репозиторий JSON на локальный компьютер.
	git clone https://github.com/crankyy1337/lesson2_git_JSON.git

 6. Внутри локального JSON создать файл “new.json”.
	cd lesson2_git_JSON && touch new.json

 7. Добавить файл под гит.
	git add new.json

 8. Закоммитить файл.
	git commit -m "added new.json for homework"

 9. Отправить файл на внешний GitHub репозиторий.
	git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
	nano new.json	//открываем на редактирование

{
	"fio": "Muradeli Georgiy",
	"age": 26,
	"pet_count": 1,
	"future_salary": "4000$"
}

CTRL+X -> y -> ENTER	//выходим с сохранением изменений

 11. Отправить изменения на внешний репозиторий.
	git add new.json
	git commit -m "modified new.json; set fio, age, pets, salary"
	git push

 12. Создать файл preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
	cat >> preferences.json	//создаем и входим в режим редактирования
{
	"favorites": {
		"film": "marvel",
		"serial": "mentalist",
		"food": "wok",
		"country": "japan"
	}
}
CTRL+D	//выходим с сохранением изменений

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
		cat >> sklls.json	//создаем и входим в режим редактирования
{
        "skills": ["terminal", "bash", "postman", "js_basics", "etc"]
}
CTRL+D	//выходим с сохранением изменений

 15. Отправить сразу 2 файла на внешний репозиторий.
	git add preferences.json skills.json
	git commit -m "added preferences and skills"
	git push
	
 16. На веб интерфейсе создать файл bug_report.json.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	перейти в нужный репозиторий на github -> нажать add file -> в выпадающем меню выбрать create new file -> ввести его имя (bug_report.json) и содержание -> внизу страницы нажать commit new file (остальные опции можно не изменять)

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	перейти в нужный репозиторий на github -> перейти в файл bug_report.json -> в секции с содержимым файла нажать на пиктограмму "карандаш" (edit this file) -> внести изменения -> внизу страницы нажать commit new file (остальные опции можно не изменять)

 20. Синхронизировать внешний и локальный репозиторий JSON
	git pull